<h3>{{course_title}} </h3>
<div class="row mt-4">
  <div class="col-md-6">
    <h3>Add a new lecture:</h3>

    <form class="form new-lecture-form">
      <div class="form-group">
        <label for="lecture-title">Title:</label>
        <input class="form-input" type="text" id="lecture-title" name="lecture-title" />
          <label for="lecture-link">Youtube URL:</label>
        <input class="form-input" type="text" id="lecture-link" name="lecture-link" />
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
      </div>
    </form>

      {{#if lectures.length}}
        <div class="col-md-6 lecture-list">
  
        {{#each lectures as |lecture|}}
        <div>
          <div>
            <h4><a href="/lecture/{{lecture.id}}">{{lecture.lecture_title}}</a></h4>
          </div>
          <div>
            <button class="btn btn-danger" data-id="{{lecture.id}}">DELETE</button>
          </div>
        </div>
        {{/each}}
            </div>
      {{/if}}
  </div>

<script>
  
const newFormHandler = async (event) => {
   
    event.preventDefault();
  
    const lecture_title = document.querySelector('#lecture-title').value.trim();
    const lecture_link = document.querySelector('#lecture-link').value.trim().replace('/watch?v=', '/embed/');
    const url = window.location.href.toString()
    let course_id = parseInt(url.slice(29))
   
    if (lecture_title && lecture_link && course_id) {

      const response = await fetch(`/api/lectures`, {
        method: 'POST',
        body: JSON.stringify({lecture_title, lecture_link, course_id}),
        headers: {
          'Content-Type': 'application/json',
        },
      });
  
      if (response.ok) {
        document.location.reload();
      } else {
        alert('Failed to create lecture');
      }
    }
  };
  
  const delButtonHandler = async (event) => {
    if (event.target.hasAttribute('data-id')) {
      const id = event.target.getAttribute('data-id');
  
      const response = await fetch(`/api/lectures/${id}`, {
        method: 'DELETE',
      });
  
      if (response.ok) {
        
      } else {
        alert('Failed to delete lectures');
      }
    }
  };
  
  document
    .querySelector('.new-lecture-form')
    .addEventListener('submit', newFormHandler);
  
  document
    .querySelector('.lecture-list')
    .addEventListener('click', delButtonHandler);
</script>